{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/fso/part-1/part1/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [userInput, setUserInput] = useState(null);\n  const [countries, setCountries] = useState([]);\n  useEffect(() => {\n    if (userInput) {\n      axios.get(`https://restcountries.com/v3.1/name/${userInput}`).then(response => {\n        setCountries(response.data.map(country => country.name));\n      });\n    }\n  }, [userInput]);\n  const handleChange = event => {\n    setUserInput(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"find countries \", /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: countries.map(country => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: country.common\n      }, country.common, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"2tX9PpSoNxxgemdAcLvAGuiPX2A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","userInput","setUserInput","countries","setCountries","get","then","response","data","map","country","name","handleChange","event","target","value","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","common","_c","$RefreshReg$"],"sources":["/Users/user/Desktop/fso/part-1/part1/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios'\n\nconst App = () => {\n\n  const [userInput, setUserInput] = useState(null)\n  const [countries, setCountries] = useState([]);\n\n  useEffect(() => {\n\n\n\n    if (userInput) {\n      axios\n        .get(`https://restcountries.com/v3.1/name/${userInput}`)\n        .then(response => {\n          setCountries(response.data.map(country => country.name));\n        })\n    }\n\n  }, [userInput])\n\n  const handleChange = (event) => {\n    setUserInput(event.target.value)\n  }\n\n  return (\n    <>\n      find countries <input onChange={handleChange} />\n      <ul>\n        {countries.map(country => (\n          <li key={country.common}>{country.common}</li>\n        ))}\n\n      </ul>\n    </>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEhB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IAId,IAAIQ,SAAS,EAAE;MACbP,KAAK,CACFW,GAAG,CAAE,uCAAsCJ,SAAU,EAAC,CAAC,CACvDK,IAAI,CAACC,QAAQ,IAAI;QAChBH,YAAY,CAACG,QAAQ,CAACC,IAAI,CAACC,GAAG,CAACC,OAAO,IAAIA,OAAO,CAACC,IAAI,CAAC,CAAC;MAC1D,CAAC,CAAC;IACN;EAEF,CAAC,EAAE,CAACV,SAAS,CAAC,CAAC;EAEf,MAAMW,YAAY,GAAIC,KAAK,IAAK;IAC9BX,YAAY,CAACW,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAClC,CAAC;EAED,oBACEnB,OAAA,CAAAE,SAAA;IAAAkB,QAAA,GAAE,iBACe,eAAApB,OAAA;MAAOqB,QAAQ,EAAEL;IAAa;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChDzB,OAAA;MAAAoB,QAAA,EACGb,SAAS,CAACM,GAAG,CAACC,OAAO,iBACpBd,OAAA;QAAAoB,QAAA,EAA0BN,OAAO,CAACY;MAAM,GAA/BZ,OAAO,CAACY,MAAM;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAsB,CAC9C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEA,CAAC;EAAA,eACL,CAAC;AAEP,CAAC;AAACrB,EAAA,CAlCID,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAoCT,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}