{"ast":null,"code":"// // import React from 'react'\n// // import ReactDOM from 'react-dom'\n\n// // const Header = (props) => {\n// //   return (\n// //     <h1>{props.course}</h1>\n// //   )\n// // }\n\n// // const Part = (props) => {\n// //   return (\n// //     <p>\n// //       {props.part} {props.exercises}\n// //     </p>\n// //   )\n// // }\n\n// // const Content = (props) => {\n// //   return (\n// //     <div>\n// //       <Part part={props.parts[0].name} exercises={props.parts[0].exercises}/>\n// //       <Part part={props.parts[1].name} exercises={props.parts[1].exercises}/>\n// //       <Part part={props.parts[2].name} exercises={props.parts[2].exercises}/>\n// //     </div>\n// //   )\n// // }\n\n// // const Total = (props) => {\n// //   return (\n// //     <p>Number of exercises {props.parts[0].exercises + props.parts[1].exercises + props.parts[2].exercises}</p>\n// //   )\n// // }\n\n// // const App = () => {\n// //   const course = {\n// //     name: 'Half Stack application development',\n// //     parts: [\n// //       {\n// //         name: 'Fundamentals of React',\n// //         exercises: 10\n// //       },\n// //       {\n// //         name: 'Using props to pass data',\n// //         exercises: 7\n// //       },\n// //       {\n// //         name: 'State of a component',\n// //         exercises: 14\n// //       }\n// //     ]\n// //   }\n\n// //   return (\n// //     <div>\n// //       <Header course={course.name} />\n// //       <Content parts={course.parts}/>\n// //       <Total parts={course.parts} />\n// //     </div>\n// //   )\n// // }\n\n// import { useState } from \"react\"\n\n// const Display = props => <div>{props.value}</div>\n\n// const Button = (props) => {\n//   return (\n//     <button onClick={props.handleClick}>\n//     {props.text}\n//   </button>\n//   )\n// }\n\n// const App = () => {\n//   const [value, setValue] = useState(10)\n\n//   const setToValue = (newValue) => {\n//     console.log('value now', newValue)\n//     setValue(newValue)\n//   }\n\n//   return (\n//     <div>\n//       <Display value={value} />\n//       <Button handleClick={() => setToValue(1000)} text=\"thousand\" />\n//       <Button handleClick={() => setToValue(0)} text=\"reset\" />\n//       <Button handleClick={() => setToValue(value + 1)} text=\"increment\" />\n//     </div>\n//   )\n// }\n\nimport { useState } from 'react';\n\n// const Title = (props) => {\n//   return (\n//     <h1>\n//       {props.text}\n//     </h1>\n//   )\n// }\n\n// const Button = ({ text, handleClick }) => {\n//   return (\n//     <button onClick={handleClick}>\n//       {text}\n//     </button>\n//   )\n// }\n\n// const Score = ({ text, value }) => {\n//   return (\n//     <div>\n//       {text} {value}\n//     </div>\n//   )\n// }\n\n// const Statistics = ({ good, bad, neutral }) => {\n\n//   const all = good + bad + neutral\n\n//   return (\n//     <>\n//       <div>average: {(good - bad) / all}</div>\n//       <div>positive: {(good / 9) * 100}%</div>\n//     </>\n//   )\n// }\n\n// const App = () => {\n//   // save clicks of each button to its own state\n//   const [good, setGood] = useState(0)\n//   const [neutral, setNeutral] = useState(0)\n//   const [bad, setBad] = useState(0)\n\n//   const all = good + bad + neutral\n\n//   if (good > 0 || bad > 0 || neutral > 0) {\n//     return (\n//       <>\n//         <Title text='give feedback' />\n\n//         <Button text='good' handleClick={() => setGood(good + 1)} />\n//         <Button text='neutral' handleClick={() => setNeutral(neutral + 1)} />\n//         <Button text='bad' handleClick={() => setBad(bad + 1)} />\n\n//         <Title text='statistics' />\n//         <Score text='good' value={good} />\n//         <Score text='neutral' value={neutral} />\n//         <Score text='bad' value={bad} />\n//         <div>all: {all}</div>\n//         <Statistics good={good} bad={bad} neutral={neutral} />\n//       </>\n//     )\n//   } else {\n//     return (\n//       <div>\n\n//         <Title text='give feedback' />\n\n//         <Button text='good' handleClick={() => setGood(good + 1)} />\n//         <Button text='neutral' handleClick={() => setNeutral(neutral + 1)} />\n//         <Button text='bad' handleClick={() => setBad(bad + 1)} />\n\n//         <Title text='statistics' />\n//         <p>No feedback given</p>\n//       </div>\n//     )\n//   }\n// }\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Fragment","_Fragment","jsxDEV","_jsxDEV","App","_c","$RefreshReg$"],"sources":["/Users/user/Desktop/fso/part-1/part1/src/App.js"],"sourcesContent":["// // import React from 'react'\n// // import ReactDOM from 'react-dom'\n\n// // const Header = (props) => {\n// //   return (\n// //     <h1>{props.course}</h1>\n// //   )\n// // }\n\n// // const Part = (props) => {\n// //   return (\n// //     <p>\n// //       {props.part} {props.exercises}\n// //     </p>\n// //   )\n// // }\n\n// // const Content = (props) => {\n// //   return (\n// //     <div>\n// //       <Part part={props.parts[0].name} exercises={props.parts[0].exercises}/>\n// //       <Part part={props.parts[1].name} exercises={props.parts[1].exercises}/>\n// //       <Part part={props.parts[2].name} exercises={props.parts[2].exercises}/>\n// //     </div>\n// //   )\n// // }\n\n// // const Total = (props) => {\n// //   return (\n// //     <p>Number of exercises {props.parts[0].exercises + props.parts[1].exercises + props.parts[2].exercises}</p>\n// //   )\n// // }\n\n// // const App = () => {\n// //   const course = {\n// //     name: 'Half Stack application development',\n// //     parts: [\n// //       {\n// //         name: 'Fundamentals of React',\n// //         exercises: 10\n// //       },\n// //       {\n// //         name: 'Using props to pass data',\n// //         exercises: 7\n// //       },\n// //       {\n// //         name: 'State of a component',\n// //         exercises: 14\n// //       }\n// //     ]\n// //   }\n\n// //   return (\n// //     <div>\n// //       <Header course={course.name} />\n// //       <Content parts={course.parts}/>\n// //       <Total parts={course.parts} />\n// //     </div>\n// //   )\n// // }\n\n// import { useState } from \"react\"\n\n\n\n// const Display = props => <div>{props.value}</div>\n\n\n// const Button = (props) => {\n//   return (\n//     <button onClick={props.handleClick}>\n//     {props.text}\n//   </button>\n//   )\n// }\n\n\n\n// const App = () => {\n//   const [value, setValue] = useState(10)\n\n//   const setToValue = (newValue) => {\n//     console.log('value now', newValue)\n//     setValue(newValue)\n//   }\n\n//   return (\n//     <div>\n//       <Display value={value} />\n//       <Button handleClick={() => setToValue(1000)} text=\"thousand\" />\n//       <Button handleClick={() => setToValue(0)} text=\"reset\" />\n//       <Button handleClick={() => setToValue(value + 1)} text=\"increment\" />\n//     </div>\n//   )\n// }\n\n\nimport { useState } from 'react'\n\n\n// const Title = (props) => {\n//   return (\n//     <h1>\n//       {props.text}\n//     </h1>\n//   )\n// }\n\n\n// const Button = ({ text, handleClick }) => {\n//   return (\n//     <button onClick={handleClick}>\n//       {text}\n//     </button>\n//   )\n// }\n\n// const Score = ({ text, value }) => {\n//   return (\n//     <div>\n//       {text} {value}\n//     </div>\n//   )\n// }\n\n// const Statistics = ({ good, bad, neutral }) => {\n\n//   const all = good + bad + neutral\n\n//   return (\n//     <>\n//       <div>average: {(good - bad) / all}</div>\n//       <div>positive: {(good / 9) * 100}%</div>\n//     </>\n//   )\n// }\n\n// const App = () => {\n//   // save clicks of each button to its own state\n//   const [good, setGood] = useState(0)\n//   const [neutral, setNeutral] = useState(0)\n//   const [bad, setBad] = useState(0)\n\n//   const all = good + bad + neutral\n\n//   if (good > 0 || bad > 0 || neutral > 0) {\n//     return (\n//       <>\n//         <Title text='give feedback' />\n\n//         <Button text='good' handleClick={() => setGood(good + 1)} />\n//         <Button text='neutral' handleClick={() => setNeutral(neutral + 1)} />\n//         <Button text='bad' handleClick={() => setBad(bad + 1)} />\n\n//         <Title text='statistics' />\n//         <Score text='good' value={good} />\n//         <Score text='neutral' value={neutral} />\n//         <Score text='bad' value={bad} />\n//         <div>all: {all}</div>\n//         <Statistics good={good} bad={bad} neutral={neutral} />\n//       </>\n//     )\n//   } else {\n//     return (\n//       <div>\n\n//         <Title text='give feedback' />\n\n//         <Button text='good' handleClick={() => setGood(good + 1)} />\n//         <Button text='neutral' handleClick={() => setNeutral(neutral + 1)} />\n//         <Button text='bad' handleClick={() => setBad(bad + 1)} />\n\n//         <Title text='statistics' />\n//         <p>No feedback given</p>\n//       </div>\n//     )\n//   }\n// }\n\n\nconst App = () => {\n  return(\n    <>\n      \n    </>\n  )\n}\n\nexport default App\n\n\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,SAASA,QAAQ,QAAQ,OAAO;;AAGhC;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGA,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAChB,oBACED,OAAA,CAAAF,SAAA,mBAEE,CAAC;AAEP,CAAC;AAAAI,EAAA,GANKD,GAAG;AAQT,eAAeA,GAAG;AAAA,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}